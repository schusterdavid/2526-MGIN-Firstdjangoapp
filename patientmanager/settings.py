"""
Django settings for patientmanager project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*g-q-9p6@j2us_2qhwr_z99z71$5og01*5+kqshze)v+i2jg#z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'patientmanagerapp',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'patientmanager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'patientmanager.wsgi.application'



secrets = {
    "AZURE_SQL_HOST=schusterdavid-django-db.database.windows.net",
    "AZURE_SQL_USERNAME=schusterdavid",
    "AZURE_SQL_PASSWORD=DavidS20072008s",
    "AZURE_SQL_SERVERNAME=schusterdavid-django-db.database",
    "AZURE_SQL_DATABASE=schusterdavid-django-db"

}

ALLOWED_HOSTS = []

def addAllowedHosts():
    if "ALLOWED_HOST" in os.environ:
        ALLOWED_HOSTS.append(os.environ["ALLOWED_HOST"])

addAllowedHosts()


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

def inferDatabaseConfig():

    if "AZURE_SQL_HOST" in secrets:
        print("Connection to Azure SQL")
        return{
            "ENGINE": "mssql",
            "NAME": secrets["AZURE_SQL_DATABASE"],
            "USER": f"{secrets["AZURE_SQL_USERNAME"]}@{secrets["AZURE_SQL_SERVERNAME"]}",
            "PASSWORD": secrets["AZURE_SQL_PASSWORD"],
            "HOST": secrets["AZURE_SQL_HOST"],
            "PORT": "",
            "OPTIONS":
                {
                    'driver': 'ODBC Driver 18 for SQL Server'
                },
        }


    if "POSTGRES_HOST" in os.environ:
        return {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ["POSTGRES_DB"],
            'USER': os.environ["POSTGRES_USER"],
            'PASSWORD': os.environ["POSTGRES_PASSWORD"],
            'HOST': os.environ["POSTGRES_HOST"],
            'PORT': os.environ["POSTGRES_PORT"],
        }

    return {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }


DATABASES = {
    'default': inferDatabaseConfig()
}




# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SECRET_KEY = os.environ.get('SECRET_KEY', default= 'django-insecure-v^$6giv00!9$ujju)t06nv9alq)$v_p+db4u!#5jba13j_c!o%')

 
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get("DEBUG", default=1))
 
ALLOWED_HOSTS = [
]


